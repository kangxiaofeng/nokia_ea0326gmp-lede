name: Build LEDE Optimized

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  CONFIG_FILE: .config
  TARGET_DEVICE: "nokia_ea0326gmp"
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 180

    steps:
    # --- 磁盘空间优化阶段 ---
    - name: Check machine configuration
      run: |
        echo "硬件资源监测："
        echo "--------------------------CPU信息--------------------------"
        echo "CPU物理数量:$(grep -c 'physical id' /proc/cpuinfo)"
        echo -e "CPU核心信息：$(lscpu | grep 'Model name' | sed 's/^.*: //') \n"
        echo "--------------------------内存信息--------------------------"
        free -h
        echo "--------------------------硬盘信息--------------------------"
        df -Th

    - name: Optimize Disk Space
      uses: "hugoalh/disk-space-optimizer-ghaction@v0.8.1"
      with:
        operate_sudo: "True"
        docker_prune: "True"
        apt_prune: "True"
        swap_size_mb: 1024

    # --- 代码准备阶段 ---
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
        path: lede

    # --- 环境初始化阶段 ---
    - name: Initialize environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo timedatectl set-timezone "$TZ"
        sudo apt-get update
        sudo apt-get install -y \
          build-essential ccache cmake curl flex gawk gettext git libncurses-dev libssl-dev \
          python3 python3-distutils rsync unzip zlib1g-dev file wget qemu-utils

    # --- 编译缓存设置 ---
    - name: Cache build dependencies
      uses: actions/cache@v3
      with:
        path: |
          lede/dl
          lede/build_dir
          ~/.ccache
        key: ${{ runner.os }}-lede-${{ env.TARGET_DEVICE }}-${{ hashFiles('lede/feeds.conf.default') }}

    # --- 源码配置阶段 ---
    - name: Configure source
      working-directory: ./lede
      run: |
        [ -e $GITHUB_WORKSPACE/$CONFIG_FILE ] && cp $GITHUB_WORKSPACE/$CONFIG_FILE .config
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        make defconfig

    # --- 固件编译阶段 ---
    - name: Compile firmware
      working-directory: ./lede
      run: |
        make download -j$(nproc)
        find dl -size -1024c -delete
        echo "开始编译（使用$(nproc)线程）"
        make -j$(($(nproc) + 1)) || make -j1 V=s
        echo "compile_status=success" >> $GITHUB_ENV

    # --- 制品处理阶段 ---
    - name: Upload artifacts
      if: ${{ env.compile_status == 'success' }}
      uses: actions/upload-artifact@v3
      with:
        name: lede-${{ env.TARGET_DEVICE }}-bin
        path: lede/bin/targets/*/*

    - name: Create release
      if: ${{ env.compile_status == 'success' }}
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ env.TARGET_DEVICE }}-$(date +'%Y%m%d')
        files: |
          lede/bin/targets/**/*.bin
          lede/bin/targets/**/*.manifest
        body: |
          ### 自动编译 LEDE 固件
          **设备型号**: ${{ env.TARGET_DEVICE }}
          **编译时间**: $(date +'%Y-%m-%d %H:%M:%S')
          
          默认登录信息：
          - 地址: 192.168.1.1
          - 用户名: root
          - 密码: password
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # --- 清理旧版本 ---
    - name: Clean old releases
      uses: dev-drprasad/delete-older-releases@v0.2.0
      with:
        keep_latest: 3
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
