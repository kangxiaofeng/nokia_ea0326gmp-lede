name: Build LEDE

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  CONFIG_FILE: .config
  DIY_SH: diy.sh
  FILES: files
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 180

    steps:
      # --- 步骤 1: 检查机器配置 ---
      - name: Check machine configuration
        run: |
          echo "警告⚠"
          echo "分配的服务器性能有限，若选择的插件过多，务必注意CPU性能！"
          echo "云编译建议取消勾选Node.js及其相关插件！"
          echo "已知CPU型号（降序）：7763,8370C,8272CL,8171M,E5系列"
          echo "--------------------------CPU信息--------------------------"
          echo "CPU物理数量:$(cat /proc/cpuinfo| grep "physical id"| sort| uniq| wc -l)"
          echo -e "CPU核心及版本信息：$(cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c) \n"
          echo "--------------------------内存信息--------------------------"
          echo "已安装内存详细信息："
          sudo lshw -short -C memory | grep GiB
          echo -e "\n"
          echo "--------------------------硬盘信息--------------------------"
          echo -e  "硬盘数量：$(ls /dev/sd* | grep -v [1-9] | wc -l) \n"
          echo "硬盘详情："
          df -Th

      # --- 步骤 2: 初始化环境 ---
      - name: Initialize environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo -E apt update
          sudo -E apt -y install $(curl -fsSL https://is.gd/depends_ubuntu_2204)
          sudo -E apt -y autoremove --purge
          sudo -E apt -y install libfuse-dev
          sudo -E apt -y install rename
          sudo -E apt -y install time
          sudo -E apt -y install gn
          sudo -E systemctl daemon-reload
          sudo -E apt clean
          sudo timedatectl set-timezone "$TZ"
          sudo chown $USER:$GROUPS $GITHUB_WORKSPACE

      # --- 步骤 3: 克隆源代码 ---
      - name: Clone source code
        working-directory: ./
        run: |
          git clone $REPO_URL -b $REPO_BRANCH lede
          cd lede
          sed -i 's|https://github.com/coolsnowwolf/luci.git;openwrt-23.05|https://github.com/coolsnowwolf/luci|g' feeds.conf.default

      # --- 步骤 4: 缓存编译 ---
      - name: cache wrt build
        uses: stupidloud/cachewrtbuild@main
        with:
          ccache: 'true'
          mixkey: amlogic-${{ env.REPO_BRANCH }}
          prefix: ${{ github.workspace }}/lede

      # --- 步骤 5: 更新并安装依赖包 ---
      - name: Update & Install feeds
        working-directory: ./lede
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      # --- 步骤 6: 加载自定义配置 ---
      - name: Load custom config
        run: |
          [ -e $FILES ] && mv $FILES lede/files
          [ -e $CONFIG_FILE ] && mv $CONFIG_FILE lede/.config
          chmod +x $DIY_SH
          cd lede
          $GITHUB_WORKSPACE/$DIY_SH

      # --- 步骤 7: 生成日期变量 ---
      - name: Generate Date
        id: date
        run: |
          DATE=$(date +'%Y%m%d-%H%M')
          echo "PACKAGED_OUTPUTDATE=${{ github.run_id }}_$DATE" >> $GITHUB_ENV

      # --- 步骤 8: 下载依赖包 ---
      - name: Download package
        working-directory: ./lede
        run: |
          make defconfig
          make download -j8
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;

      # --- 步骤 9: 编译固件 ---
      - name: Compile LEDE
        id: compile
        run: |
          set -e
          chmod -R 755 lede
          cd lede
          echo -e "$(nproc) thread compile"
          make -j$(nproc) || make -j1 || make -j1 V=s
          echo "compile_status=success" >> $GITHUB_ENV

      # --- 步骤 10: 上传到 Release ---
      - name: Upload to Release
        if: ${{ steps.compile.outcome == 'success' }}
        uses: ncipollo/release-action@main
        with:
          tag: OpenWrt_N1_${{ env.PACKAGED_OUTPUTDATE }}
          artifacts: "lede/bin/targets/*/*/*.bin"
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}
          body: |
            ### 基于 Lean 的 LEDE 源码构建
            **首次使用建议全新刷写**

            **基本信息**
            - 管理 IP: 192.168.1.1
            - 用户名: root
            - 密码: password
            - 设备型号: nokia_ea0326gmp

      # --- 步骤 11: 删除旧版本释放 ---
      - name: Delete old releases
        uses: dev-drprasad/delete-older-releases@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          keep_latest: 10
          delete_tags : true
