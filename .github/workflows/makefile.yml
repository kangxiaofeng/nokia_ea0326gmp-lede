name: Build LEDE

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04-large  # 重要：使用更大的 runner
    timeout-minutes: 180

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Deep Clean Disk Space
      run: |
        sudo apt-get clean
        sudo rm -rf /usr/local/lib/android /usr/share/dotnet /opt/ghc /swapfile
        sudo rm -rf /usr/lib/firefox /usr/lib/google-cloud-sdk
        df -h

    - name: Generate Date
      id: date
      run: |
        DATE=$(date +'%Y%m%d-%H%M')
        echo "PACKAGED_OUTPUTDATE=${{ github.run_id }}_$DATE" >> $GITHUB_ENV

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          lede/ccache
          lede/dl
        key: ${{ runner.os }}-lede-${{ hashFiles('.config') }}-${{ github.sha }}

    - name: Install dependencies
      run: |
        sudo apt-get update -y
        sudo apt-get install -y \
          ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
          bzip2 ccache cmake cpio curl device-tree-compiler flex gawk gcc-multilib \
          gettext genisoimage git gperf help2man intltool libc6-dev-i386 libelf-dev \
          libfuse-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev \
          libncurses5-dev libncursesw5-dev libpython3-dev libreadline-dev libssl-dev \
          libtool llvm ninja-build p7zip p7zip-full patch pkgconf python3 python3-pyelftools \
          python3-setuptools qemu-utils rsync scons squashfs-tools subversion swig texinfo \
          uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev jq zstd libzstd-dev \
          libjson-c-dev libubox-dev  # 新增关键依赖

    - name: Prepare build environment
      run: |
        [ -d "lede" ] || git clone https://github.com/coolsnowwolf/lede.git lede
        cd lede
        git pull
        ./scripts/feeds update -a -f
        ./scripts/feeds install -a --force
        cp $GITHUB_WORKSPACE/.config .
        make defconfig

    - name: Download Sources
      run: |
        cd lede
        make download -j$(nproc)
        find dl -size -1024c -delete  # 删除不完整的下载

    - name: Compile LEDE
      id: compile
      run: |
        cd lede
        make -j$(($(nproc) / 2)) V=s 2>&1 | tee build.log  # 限制并发数
      continue-on-error: false

    - name: Archive Build Logs
      if: ${{ failure() }}
      uses: actions/upload-artifact@v3
      with:
        name: build-logs
        path: lede/build.log

    - name: Upload to Release
      if: ${{ steps.compile.outcome == 'success' }}
      uses: ncipollo/release-action@v1
      with:
        tag: OpenWrt_nokia_ea0326gmp_${{ env.PACKAGED_OUTPUTDATE }}
        artifacts: "lede/bin/targets/*/*/*.bin"
        allowUpdates: true
        token: ${{ secrets.GITHUB_TOKEN }}
        body: |
          ### 编译信息
          - 时间: ${{ env.PACKAGED_OUTPUTDATE }}
          - 机型: Nokia EA0326GMP
          - 内核版本: $(grep 'LINUX_VERSION-' lede/.config | cut -d= -f2)
