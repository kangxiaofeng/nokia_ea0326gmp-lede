name: 🚀 Nokia EA0326GMP 极速编译

on:
  push:
    tags: ['v*']
  workflow_dispatch:

env:
  FIRMWARE_PATH: bin/targets/mediatek/filogic/
  CCACHE_DIR: /github/workspace/ccache
  DL_DIR: /github/workspace/dl
  BUILD_DIR: /github/workspace/build_dir

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 120

    steps:
    # 第一阶段：初始化环境
    - name: 🔍 检出代码
      uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0

    - name: 🛠️ 设置缓存
      uses: actions/cache@v3
      with:
        path: |
          ${{ env.CCACHE_DIR }}
          ${{ env.DL_DIR }}
          ${{ env.BUILD_DIR }}
        key: ${{ runner.os }}-lede-${{ hashFiles('.config') }}-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-lede-${{ hashFiles('.config') }}-

    # 第二阶段：安装依赖
    - name: 📦 安装基础工具链
      run: |
        sudo apt-get update -y
        sudo apt-get install -y \
          build-essential ccache clang flex bison g++ gawk gcc-multilib \
          gettext git libncurses5-dev libssl-dev python3-distutils \
          rsync unzip zlib1g-dev file wget cmake pkgconf

    - name: 💊 修复关键依赖
      run: |
        sudo apt-get install -y \
          bc lm-sensors pciutils libpam-dev libcurl4-openssl-dev \
          libyaml-cpp-dev libaio-dev libpcre2-dev libselinux1-dev \
          libunistring-dev libxml2-dev libkmod-dev libtirpc-dev \
          libgpiod-dev glib2.0-dev jq zstd libzstd-dev

        # 初始化ccache
        ccache -M 4G
        ccache -s

    # 第三阶段：准备编译
    - name: 🔧 配置环境
      run: |
        export FORCE_UNSAFE_CONFIGURE=1
        export JOBS=$(($(nproc) + 1))
        echo "JOBS=$JOBS" >> $GITHUB_ENV

        # 修复常见警告
        mkdir -p staging_dir/host/bin
        ln -sf $(which gcc) staging_dir/host/bin/gcc
        ln -sf $(which g++) staging_dir/host/bin/g++

    - name: ⏬ 下载源码
      run: |
        make defconfig
        [ -d "$DL_DIR" ] || mkdir -p "$DL_DIR"
        make download -j$JOBS
        find "$DL_DIR" -size -1k -delete

    # 第四阶段：分步编译
    - name: 🛠️ 编译工具链
      run: make -j$JOBS tools/compile toolchain/compile

    - name: 🧱 编译核心包
      run: make -j$JOBS package/compile

    - name: 🖼️ 生成固件
      run: make -j$JOBS || make -j1 V=s

    # 第五阶段：发布成果
    - name: 📌 收集成果
      run: |
        mkdir -p artifacts
        cp $FIRMWARE_PATH/*.bin artifacts/
        cp $FIRMWARE_PATH/*.manifest artifacts/
        ccache -s >> artifacts/ccache.log
        du -sh $DL_DIR > artifacts/size.log

    - name: 🚀 创建发布版
      if: success()
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: "EA0326GMP固件 ${{ github.ref_name }}"
        body: |
          ### 🚩 固件信息
          - 设备型号：Nokia EA0326GMP
          - 编译时间：$(date +'%Y-%m-%d %H:%M')
          - 源码版本：$(git rev-parse --short HEAD)

          ### 🔧 刷机指南
          1. 进入原厂固件升级页面
          2. 选择本固件文件
          3. 等待自动重启（约3分钟）

          ### ⚠️ 注意事项
          - 首次启动较慢（约5分钟）
          - 默认IP：192.168.1.1
          - 默认账号：root/password
        files: |
          artifacts/*.bin
          artifacts/*.manifest
        draft: false
